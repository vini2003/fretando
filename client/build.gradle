import org.jetbrains.compose.desktop.application.dsl.TargetFormat

plugins {
    id "java" apply true
    id "org.jetbrains.kotlin.multiplatform" apply true
    id "org.jetbrains.compose" apply true
}

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    google()

    mavenCentral()

    maven {
        name = "JetBrains Compose"
        url = "https://maven.pkg.jetbrains.space/public/p/compose/dev"
    }
}

kotlin {
    jvm {
        withJava()
    }

    sourceSets {
        jvmMain {
            dependencies {
                implementation(project(":common"))

                implementation(compose.desktop.currentOs) {
                    exclude group: "com.google.android.material", module: "material"
                    exclude group: "org.jetbrains.compose.material", module: "material-desktop"
                }

                implementation("org.jetbrains.compose.material:material-icons-extended:${composeVersion}")

                implementation("io.ktor:ktor-client-core:${ktorVersion}")
                implementation("io.ktor:ktor-client-content-negotiation:${ktorVersion}")
                implementation("io.ktor:ktor-serialization-gson:${ktorVersion}")
                implementation("io.ktor:ktor-client-cio:${ktorVersion}")

                implementation("com.squareup.moshi:moshi:${moshiVersion}")

                implementation("io.ktor:ktor-client-core:${ktorVersion}")

                implementation(compose.material3)
            }
        }
    }
}

compose.desktop {
    application {
        mainClass = "MainKt"

        nativeDistributions {
            modules("java.instrument", "java.management", "java.prefs", "java.sql", "jdk.unsupported")

            targetFormats = [TargetFormat.Dmg, TargetFormat.Msi, TargetFormat.Deb]

            packageName = "Fretando"
            packageVersion = "1.0.0"

            macOS {
                iconFile.set(project.file("icon.icns"))
            }
            windows {
                iconFile.set(project.file("icon.ico"))
            }
            linux {
                iconFile.set(project.file("icon.png"))
            }
        }
    }
}
